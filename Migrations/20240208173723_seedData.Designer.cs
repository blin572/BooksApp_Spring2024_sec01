// <auto-generated />
using BooksApp_Spring2024_sec01.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BooksApp_Spring2024_sec01.Migrations
{
    [DbContext(typeof(BooksDbContext))]
    [Migration("20240208173723_seedData")]
    partial class seedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BooksApp_Spring2024_sec01.Models.Books", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookID"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookID = 1,
                            Author = "Charles Dickens",
                            CategoryID = 3,
                            Description = "13th century novel about educating an orphan nicknamed Pip",
                            ISBN = "82HB837HUN",
                            ImgUrl = "",
                            Price = 19.99m,
                            Title = "Grate Expectations"
                        },
                        new
                        {
                            BookID = 2,
                            Author = "Dr. Seuss",
                            CategoryID = 1,
                            Description = "Children's novel about a talking cat",
                            ISBN = "82HB927DNS",
                            ImgUrl = "",
                            Price = 11.99m,
                            Title = "The Cat in the Hat"
                        },
                        new
                        {
                            BookID = 3,
                            Author = "Bill Martin",
                            CategoryID = 2,
                            Description = "Children's book about colors",
                            ISBN = "73BS82DSHN",
                            ImgUrl = "",
                            Price = 5.99m,
                            Title = "Brown Bear, Brown Bear, What Do You See?"
                        });
                });

            modelBuilder.Entity("BooksApp_Spring2024_sec01.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Description = "This is the description for Science Fiction Category",
                            Name = "Science Fiction"
                        },
                        new
                        {
                            CategoryID = 2,
                            Description = "This is the description for Technology Category",
                            Name = "Technology"
                        },
                        new
                        {
                            CategoryID = 3,
                            Description = "This is the description for History Category",
                            Name = "History"
                        });
                });

            modelBuilder.Entity("BooksApp_Spring2024_sec01.Models.Books", b =>
                {
                    b.HasOne("BooksApp_Spring2024_sec01.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });
#pragma warning restore 612, 618
        }
    }
}
